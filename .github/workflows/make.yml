name: CI
permissions:
  contents: read
  pull-requests: read

on:
  push:
    branches:
      - main
      - toaster
      - julien
    paths:
      - src/**
      - .test/**
      - tools/**
      - Makefile
      - include/**
      - .github/workflows/make.yml
  pull_request:
    branches:
      - main
    paths:
      - src/**
      - .test/**
      - tools/**
      - Makefile
      - include/**
      - .github/workflows/make.yml

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04]
        include:
          - os: ubuntu-latest
            name: Ubuntu Latest
          - os: ubuntu-22.04
            name: Ubuntu 22.04
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (UwU buntu)
        run: |
          sudo apt-get update
          sudo apt-get purge -y man-db
          # Install required packages for commands : bear, clang, make, mold, wget, tar, zip, xz
          sudo apt-get install -y make clang wget tar gzip mold xz-utils zip
          # Install libraries for the project, including GNU Readline
          sudo apt-get install -y libreadline-dev
          # Install Valgrind for memory leak detection in advanced tests
          sudo apt-get install -y valgrind

      - name: Install Deno
        run: |
          curl -fsSL https://deno.land/x/install/install.sh | sh
          echo "$HOME/.deno/bin" >> $GITHUB_PATH

      - name: Build project
        run: make all
        timeout-minutes: 10

      - name: Run tests
        run: make run_test
        timeout-minutes: 10
        env:
          CRIT_DEV: 1

      - name: Run advanced tests
        run: bash tools/run_tests.sh
        timeout-minutes: 15
        env:
          CRIT_DEV: 1

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-${{ matrix.os }}
          path: |
            tools/test_report.json
            tools/test_report.html
          retention-days: 7

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-target-${{ matrix.os }}
          path: target
          retention-days: 2
  format_check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Norminette
        run: |
          python3 -m pip install norminette --upgrade --user

      - name: Run Norminette
        run: |
          python3 -m norminette --use-gitignore
        continue-on-error: true
        timeout-minutes: 2
